/* ---------------------------------------------------------------------------------------- */

/* Módulos en SASS */

/* Permite importar información de otros .scss, importante hacerlo al principio de la hoja */

@use 'box';

/* ---------------------------------------------------------------------------------------- */

/* Variables */

$fuente-tipica: sans-serif, Helvetica, Arial;
$color-fondo: #eaeaea;
$color-letra: #5b5b5b;
$color-secundario: #929292;

body{
    background-color: $color-fondo;
}

h1{
    font-family: $fuente-tipica;
    color: $color-letra;
}

p{
    color: $color-secundario;
}
/* ---------------------------------------------------------------------------------------- */

/* Anidación */

.caja{
    border: 1px solid black;
    width: 500px;
    margin: 0px auto;
    text-align: center;
    background-color: white;
    padding: 10px;

    h1{
        color: #505050;
    }
    p{
        color: #6c6c6c;
    }
    .info{
        color: #ababab;
    }
    .autor{
        font-size: 15px;
        text-decoration: underline;
        cursor: pointer;
    }
}

/* ---------------------------------------------------------------------------------------- */

/* Mixins (Funciones) */

@mixin crearBordes($color, $size, $shadow){
    border: $size solid $color;
    border-radius: $color;
    box-shadow: 0px 0px 5px $shadow;
}

.caja{
    @include crearBordes(blue, 3px, #5b5b5b)
}

.listado{
    @include crearBordes(#ccc, 5px, black);
}

/* ---------------------------------------------------------------------------------------- */

/* Herencia - Código CSS con estilos */

%alert-normal{
    border: 1px solid gray;
    background: #eee;
    color: black;
    padding: 10px;
    width: 80%;
    margin: 20px auto;
    text-align: center;
}

.alert{
    @extend %alert-normal;
    
}

.alert-danger{
    @extend %alert-normal;
    color: red;
    border-color: red; 
}

.alert-success{
    @extend %alert-normal;
    color: green; /* Heredan información de alert-normal y permite modificar lo que queremos */
    border-color: green; 
}

/* ---------------------------------------------------------------------------------------- */

/* Operadores - Realizar operaciones matemáticas en CSS */

.clearfix{
    clear: both;
}

h1{
    @debug calc(20px + 5px - 1px); /* Imprime el resultado por consola */
    font-size: 20px + 5px - 1px;
}

$caja: 200px;
$wrap: 900px;

.cajas{
    width: 900px;
    margin: 0px auto;
}

.caja{
    @debug calc($caja / $wrap) * 100%; 
    width: calc($caja / $wrap) * 100%; /* Realiza la operación y la asigna al width de la caja */
    float: left;
    margin: 20px;
}

/* ---------------------------------------------------------------------------------------- */

/* Ciclos Condicionales */

/* If */

$color-fondo: black;

h1{
    @if $color-fondo == #eaeaea{
        color: black;
    } @else if $color-fondo == black{
        color: lightblue;
    } @else{
        color: pink;
    }
}


/* ---------------------------------------------------------------------------------------- */

/* Ciclos iterativos */

/* For */

$contador: 1;

@for $contador from 1 through 10{
    .listado ul li:nth-child(#{$contador}){
        @debug calc(#{$contador}px + 10px);
        font-size: calc(#{$contador}px + 10px);
        color: orange;
        list-style: none;
    }
}